--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode3944w[1..0]	: WIRE;
	w_anode3953w[3..0]	: WIRE;
	w_anode3970w[3..0]	: WIRE;
	w_anode3980w[3..0]	: WIRE;
	w_anode3990w[3..0]	: WIRE;
	w_anode4000w[3..0]	: WIRE;
	w_anode4010w[3..0]	: WIRE;
	w_anode4020w[3..0]	: WIRE;
	w_anode4030w[3..0]	: WIRE;
	w_anode4042w[1..0]	: WIRE;
	w_anode4049w[3..0]	: WIRE;
	w_anode4060w[3..0]	: WIRE;
	w_anode4070w[3..0]	: WIRE;
	w_anode4080w[3..0]	: WIRE;
	w_anode4090w[3..0]	: WIRE;
	w_anode4100w[3..0]	: WIRE;
	w_anode4110w[3..0]	: WIRE;
	w_anode4120w[3..0]	: WIRE;
	w_data3942w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode4120w[3..3], w_anode4110w[3..3], w_anode4100w[3..3], w_anode4090w[3..3], w_anode4080w[3..3], w_anode4070w[3..3], w_anode4060w[3..3], w_anode4049w[3..3]), ( w_anode4030w[3..3], w_anode4020w[3..3], w_anode4010w[3..3], w_anode4000w[3..3], w_anode3990w[3..3], w_anode3980w[3..3], w_anode3970w[3..3], w_anode3953w[3..3]));
	w_anode3944w[] = ( (w_anode3944w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3953w[] = ( (w_anode3953w[2..2] & (! w_data3942w[2..2])), (w_anode3953w[1..1] & (! w_data3942w[1..1])), (w_anode3953w[0..0] & (! w_data3942w[0..0])), w_anode3944w[1..1]);
	w_anode3970w[] = ( (w_anode3970w[2..2] & (! w_data3942w[2..2])), (w_anode3970w[1..1] & (! w_data3942w[1..1])), (w_anode3970w[0..0] & w_data3942w[0..0]), w_anode3944w[1..1]);
	w_anode3980w[] = ( (w_anode3980w[2..2] & (! w_data3942w[2..2])), (w_anode3980w[1..1] & w_data3942w[1..1]), (w_anode3980w[0..0] & (! w_data3942w[0..0])), w_anode3944w[1..1]);
	w_anode3990w[] = ( (w_anode3990w[2..2] & (! w_data3942w[2..2])), (w_anode3990w[1..1] & w_data3942w[1..1]), (w_anode3990w[0..0] & w_data3942w[0..0]), w_anode3944w[1..1]);
	w_anode4000w[] = ( (w_anode4000w[2..2] & w_data3942w[2..2]), (w_anode4000w[1..1] & (! w_data3942w[1..1])), (w_anode4000w[0..0] & (! w_data3942w[0..0])), w_anode3944w[1..1]);
	w_anode4010w[] = ( (w_anode4010w[2..2] & w_data3942w[2..2]), (w_anode4010w[1..1] & (! w_data3942w[1..1])), (w_anode4010w[0..0] & w_data3942w[0..0]), w_anode3944w[1..1]);
	w_anode4020w[] = ( (w_anode4020w[2..2] & w_data3942w[2..2]), (w_anode4020w[1..1] & w_data3942w[1..1]), (w_anode4020w[0..0] & (! w_data3942w[0..0])), w_anode3944w[1..1]);
	w_anode4030w[] = ( (w_anode4030w[2..2] & w_data3942w[2..2]), (w_anode4030w[1..1] & w_data3942w[1..1]), (w_anode4030w[0..0] & w_data3942w[0..0]), w_anode3944w[1..1]);
	w_anode4042w[] = ( (w_anode4042w[0..0] & data_wire[3..3]), enable_wire);
	w_anode4049w[] = ( (w_anode4049w[2..2] & (! w_data3942w[2..2])), (w_anode4049w[1..1] & (! w_data3942w[1..1])), (w_anode4049w[0..0] & (! w_data3942w[0..0])), w_anode4042w[1..1]);
	w_anode4060w[] = ( (w_anode4060w[2..2] & (! w_data3942w[2..2])), (w_anode4060w[1..1] & (! w_data3942w[1..1])), (w_anode4060w[0..0] & w_data3942w[0..0]), w_anode4042w[1..1]);
	w_anode4070w[] = ( (w_anode4070w[2..2] & (! w_data3942w[2..2])), (w_anode4070w[1..1] & w_data3942w[1..1]), (w_anode4070w[0..0] & (! w_data3942w[0..0])), w_anode4042w[1..1]);
	w_anode4080w[] = ( (w_anode4080w[2..2] & (! w_data3942w[2..2])), (w_anode4080w[1..1] & w_data3942w[1..1]), (w_anode4080w[0..0] & w_data3942w[0..0]), w_anode4042w[1..1]);
	w_anode4090w[] = ( (w_anode4090w[2..2] & w_data3942w[2..2]), (w_anode4090w[1..1] & (! w_data3942w[1..1])), (w_anode4090w[0..0] & (! w_data3942w[0..0])), w_anode4042w[1..1]);
	w_anode4100w[] = ( (w_anode4100w[2..2] & w_data3942w[2..2]), (w_anode4100w[1..1] & (! w_data3942w[1..1])), (w_anode4100w[0..0] & w_data3942w[0..0]), w_anode4042w[1..1]);
	w_anode4110w[] = ( (w_anode4110w[2..2] & w_data3942w[2..2]), (w_anode4110w[1..1] & w_data3942w[1..1]), (w_anode4110w[0..0] & (! w_data3942w[0..0])), w_anode4042w[1..1]);
	w_anode4120w[] = ( (w_anode4120w[2..2] & w_data3942w[2..2]), (w_anode4120w[1..1] & w_data3942w[1..1]), (w_anode4120w[0..0] & w_data3942w[0..0]), w_anode4042w[1..1]);
	w_data3942w[2..0] = data_wire[2..0];
END;
--VALID FILE
