|lcd_interface
print_start => ~NO_FANOUT~
print_done << lcd_controller:lcd_module.port4
string_num[0] => ~NO_FANOUT~
string_num[1] => ~NO_FANOUT~
string_num[2] => ~NO_FANOUT~
string_num[3] => ~NO_FANOUT~
string_num[4] => ~NO_FANOUT~
keycode[0] => ~NO_FANOUT~
keycode[1] => ~NO_FANOUT~
keycode[2] => ~NO_FANOUT~
keycode[3] => ~NO_FANOUT~
keycode[4] => ~NO_FANOUT~
keycode[5] => ~NO_FANOUT~
keycode[6] => ~NO_FANOUT~
keycode[7] => ~NO_FANOUT~
head_loc[0] => ~NO_FANOUT~
head_loc[1] => ~NO_FANOUT~
head_loc[2] => ~NO_FANOUT~
head_loc[3] => ~NO_FANOUT~
head_loc[4] => ~NO_FANOUT~
head_loc[5] => ~NO_FANOUT~
head_loc[6] => ~NO_FANOUT~
head_loc[7] => ~NO_FANOUT~
head_loc[8] => ~NO_FANOUT~
head_loc[9] => ~NO_FANOUT~
mem_access << <GND>
mem_in[0] => ~NO_FANOUT~
mem_in[1] => ~NO_FANOUT~
mem_rw << <GND>
mem_addr[0] << <GND>
mem_addr[1] << <GND>
mem_addr[2] << <GND>
mem_addr[3] << <GND>
mem_addr[4] << <GND>
mem_addr[5] << <GND>
mem_addr[6] << <GND>
mem_addr[7] << <GND>
mem_addr[8] << <GND>
mem_addr[9] << <GND>
en << lcd_controller:lcd_module.port5
rs << lcd_controller:lcd_module.port6
rw << lcd_controller:lcd_module.port7
io[0] <> lcd_controller:lcd_module.port8
io[1] <> lcd_controller:lcd_module.port8
io[2] <> lcd_controller:lcd_module.port8
io[3] <> lcd_controller:lcd_module.port8
io[4] <> lcd_controller:lcd_module.port8
io[5] <> lcd_controller:lcd_module.port8
io[6] <> lcd_controller:lcd_module.port8
io[7] <> lcd_controller:lcd_module.port8
rst => rst.IN1
clk => clk.IN1
did_print[0] << did_print[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
did_print[1] << did_print[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] << data[0].DB_MAX_OUTPUT_PORT_TYPE
data[1] << data[1].DB_MAX_OUTPUT_PORT_TYPE
data[2] << data[2].DB_MAX_OUTPUT_PORT_TYPE
data[3] << data[3].DB_MAX_OUTPUT_PORT_TYPE
data[4] << data[4].DB_MAX_OUTPUT_PORT_TYPE
data[5] << data[5].DB_MAX_OUTPUT_PORT_TYPE
data[6] << data[6].DB_MAX_OUTPUT_PORT_TYPE
data[7] << data[7].DB_MAX_OUTPUT_PORT_TYPE
is_ready << lcd_controller:lcd_module.port4


|lcd_interface|lcd_controller:lcd_module
rs_in => Selector0.IN4
rw_in => Selector1.IN4
data_in[0] => Selector9.IN4
data_in[1] => Selector8.IN4
data_in[2] => Selector7.IN4
data_in[3] => Selector6.IN4
data_in[4] => Selector5.IN4
data_in[5] => Selector4.IN4
data_in[6] => Selector3.IN4
data_in[7] => Selector2.IN4
execute => Mux8.IN11
execute => Mux5.IN14
execute => Mux8.IN12
execute => is_ready.DATAB
is_ready <= is_ready.DB_MAX_OUTPUT_PORT_TYPE
en <= en_reg.DB_MAX_OUTPUT_PORT_TYPE
rs <= rs_reg.DB_MAX_OUTPUT_PORT_TYPE
rw <= rw_reg.DB_MAX_OUTPUT_PORT_TYPE
io[0] <> io[0]
io[1] <> io[1]
io[2] <> io[2]
io[3] <> io[3]
io[4] <> io[4]
io[5] <> io[5]
io[6] <> io[6]
io[7] <> io[7]
rst => has_init.ACLR
rst => busy~reg0.ACLR
rst => timer_target[0].PRESET
rst => timer_target[1].PRESET
rst => timer_target[2].PRESET
rst => timer_target[3].PRESET
rst => timer_target[4].PRESET
rst => timer_target[5].PRESET
rst => timer_target[6].PRESET
rst => timer_target[7].PRESET
rst => timer_target[8].ACLR
rst => timer_target[9].ACLR
rst => timer_target[10].ACLR
rst => timer_target[11].ACLR
rst => timer_target[12].ACLR
rst => timer_target[13].ACLR
rst => timer_target[14].ACLR
rst => timer_target[15].ACLR
rst => timer_target[16].ACLR
rst => timer_target[17].ACLR
rst => timer_target[18].ACLR
rst => timer_target[19].ACLR
rst => timer_target[20].ACLR
rst => timer_target[21].ACLR
rst => timer_target[22].ACLR
rst => timer_target[23].ACLR
rst => timer_target[24].ACLR
rst => timer_target[25].ACLR
rst => timer_target[26].ACLR
rst => timer_target[27].ACLR
rst => timer_target[28].ACLR
rst => timer_target[29].ACLR
rst => timer_target[30].ACLR
rst => timer_target[31].ACLR
rst => timer_start.ACLR
rst => en_reg.ACLR
rst => io_reg[0].ACLR
rst => io_reg[1].ACLR
rst => io_reg[2].ACLR
rst => io_reg[3].ACLR
rst => io_reg[4].ACLR
rst => io_reg[5].ACLR
rst => io_reg[6].ACLR
rst => io_reg[7].ACLR
rst => rw_reg.PRESET
rst => rs_reg.ACLR
rst => state[0]~reg0.PRESET
rst => state[1]~reg0.ACLR
rst => state[2]~reg0.ACLR
rst => state[3]~reg0.ACLR
clk => clk.IN1
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
next_state[0] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
next_state[1] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
next_state[2] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
next_state[3] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lcd_interface|lcd_controller:lcd_module|timer:time_keeper
max[0] => Add1.IN64
max[1] => Add1.IN63
max[2] => Add1.IN62
max[3] => Add1.IN61
max[4] => Add1.IN60
max[5] => Add1.IN59
max[6] => Add1.IN58
max[7] => Add1.IN57
max[8] => Add1.IN56
max[9] => Add1.IN55
max[10] => Add1.IN54
max[11] => Add1.IN53
max[12] => Add1.IN52
max[13] => Add1.IN51
max[14] => Add1.IN50
max[15] => Add1.IN49
max[16] => Add1.IN48
max[17] => Add1.IN47
max[18] => Add1.IN46
max[19] => Add1.IN45
max[20] => Add1.IN44
max[21] => Add1.IN43
max[22] => Add1.IN42
max[23] => Add1.IN41
max[24] => Add1.IN40
max[25] => Add1.IN39
max[26] => Add1.IN38
max[27] => Add1.IN37
max[28] => Add1.IN36
max[29] => Add1.IN35
max[30] => Add1.IN34
max[31] => Add1.IN33
start => always0.IN1
done <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK


